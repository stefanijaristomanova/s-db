# This workflow will build a MuleSoft project and deploy to CloudHub

name: Build and Deploy to Sandbox
env:
  applicationName: 's-db'
  artifactName: 's-db-mule-application'
  hostname: 'https://anypoint.mulesoft.com'
  uri: 'anypoint.mulesoft.com'
  applicationIdCloudhub: '17545841' # Application id, can be found in the anypoint platform
  organizationId: '2ed587c4-ea36-44a8-9424-9a402da6979b' # OrganizationId
  environment: "Sandbox"
  region: ir-e1
  noOfWorkers: 1
  workerType: micro
  muleAppVersion: '1.0.0' 
  environmentId: 'e682c973-f385-47db-a4cc-e820c0af6952' # EnvironmentId : Acceptance, can be found at https://eu1.anypoint.mulesoft.com/accounts/api/organizations/c43e3f9c-5cda-4b72-921d-a17fc5729975/environments

on:
  push:
    branches: [ main ]
    
  workflow_dispatch:
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    
    - uses: actions/checkout@v2
    
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    
#     - name: Print effective-settings (optional)
#       run: mvn help:effective-settings
    
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    
    - name: Upload artifact 
      uses: actions/upload-artifact@master
      with:
          name: artifacts
          path: target/*.jar
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: actions/download-artifact@master
        with:
          name: artifacts
      - name: Deploy to CloudHub
        env:
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          PLATFORM_CLIENT_ID: ${{ secrets.PLATFORM_CLIENT_ID }}
          PLATFORM_CLIENT_SECRET: ${{ secrets.PLATFORM_CLIENT_SECRET }}
        run: |
          artifactName=$(ls *.jar | head -1)
          mvn mule:deploy -DskipMunitTests -Dmule.artifact=$artifactName -Danypoint.username="$USERNAME" -Danypoint.password="$PASSWORD" -Danypoint.platform.clientId="$PLATFORM_CLIENT_ID" -Danypoint.platform.clientSecret="$PLATFORM_CLIENT_SECRET"   
